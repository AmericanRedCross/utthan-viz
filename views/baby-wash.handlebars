<style>
.stage-title {
  font-size: 14px;
  font-weight:700;
}
.stage-info {
  display: inline-block;
}

</style>


<header class="row header">
	<div class="col-md-12">
		<h1>Baby WASH </h1>
	</div>
</header>
<hr>

<div class="row">
    <div id="content">

    </div>
</div>

<hr>
<footer id="site-footer">
	<div class="row row-logo">
				{{{logos}}}
			</div>
</footer>


<script>

var data;
var stages = ["intake structure", "pipeline", "rvt (stone m)", "rvt (ferrocement)", "bpt-ic-dc", "tap stand posts", "toilet construction"]
var checklist = ["intake structure / collection local materials", "intake structure / foundation prep", "intake structure / stone solling", "intake structure / pcc", "intake structure / stone masonry work", "intake structure / plastering", "intake structure / punning", "intake structure / install fittings", "intake structure / barbed wire fencing", "pipeline / digging", "pipeline / replacement & joining", "pipeline / refilling", "rvt (stone m) / collection local materials", "rvt (stone m) / clear site", "rvt (stone m) / foundation prep", "rvt (stone m) / stone solling", "rvt (stone m) / pcc", "rvt (stone m) / stone masonry work", "rvt (stone m) / plastering", "rvt (stone m) / punning", "rvt (stone m) / cover slab casting", "rvt (stone m) / install fittings", "rvt (stone m) / barbed wire fencing", "rvt (ferrocement) / site clearance", "rvt (ferrocement) / foundation prep", "rvt (ferrocement) / plumbing", "rvt (ferrocement) / stone solling", "rvt (ferrocement) / pcc", "rvt (ferrocement) / formwork ferrocement", "rvt (ferrocement) / laying of chicken wire", "rvt (ferrocement) / laying of plain wire", "rvt (ferrocement) / outside plaster", "rvt (ferrocement) / curing", "rvt (ferrocement) / remove formwork", "rvt (ferrocement) / inside plaster", "rvt (ferrocement) / punning", "rvt (ferrocement) / barbed wire fencing", "rvt (ferrocement) / installation of fittings", "bpt-ic-dc / site clearance", "bpt-ic-dc / foundation prep", "bpt-ic-dc / stone solling", "bpt-ic-dc / pcc", "bpt-ic-dc / stone masonary work", "bpt-ic-dc / plastering", "bpt-ic-dc / punning", "bpt-ic-dc / slab casting", "bpt-ic-dc / install fittings", "tap stand posts / clear site", "tap stand posts / foundation prep", "tap stand posts / stone solling", "tap stand posts / pcc", "tap stand posts / stone masonry work", "tap stand posts / plastering", "tap stand posts / instal fittings", "toilet construction / site clearance", "toilet construction / septic tank foundation prep", "toilet construction / soiling in septic tank", "toilet construction / dry stone masonary for septic tank", "toilet construction / slab casting over septic tank", "toilet construction / toilet house foundation prep", "toilet construction / solling for toilet house", "toilet construction / stone masonry work, mud & mortar", "toilet construction / door and ventilation fixing", "toilet construction / plastering", "toilet construction / roofing", "toilet construction / fixing of panset"]

function getData(){
  $.ajax({
    type: 'GET',
    url: 'data/baby-wash',
    dataType: 'JSON'
  }).done(function(response){
    data = response;
    crunchData();
  });
}

function crunchData(){
  $.each(data, function(index, project){
    project["progress"] = {};
    for(key in project){
      if(checklist.indexOf(key) !== -1){
        var stage = key.split(" / ")[0];
        var step = key.split(" / ")[1];
        var status = project[key].toLowerCase();
        if(project["progress"].hasOwnProperty(stage) === false){
          project["progress"][stage] = { y: 0, n: 0, o: 0 };
        }
        var status = project[key].toLowerCase();
        switch(status) {
          case "y":
            project["progress"][stage]["y"] ++;
            break;
          case "n":
            project["progress"][stage]["n"] ++;
            break;
          case "o":
            project["progress"][stage]["o"] ++;
            break;
          default:
            break;
        }
      }
    }
  });

  vizData();

}

var width = 30,
    height = 30,
    radius = Math.min(width, height) / 2,
    arc = d3.svg.arc().outerRadius(radius),
    pie = d3.layout.pie().value(function(d){ return d.count })

function vizData(){
  $.each(data, function(indexP, project){
    var section = d3.select('#content').append('div').html('<div class="stage-title">' +
      project.location + ' <small>(' + project.district + ', ' + project.vdc +
      ', Ward ' + project.ward + ')</small></div>')
    d3.select('#content').append('hr')
    $.each(stages, function(indexS, stage){
      var yesCount = project.progress[stage]["y"];
      var noCount = project.progress[stage]["n"];
      var ongoingCount = project.progress[stage]["o"];
      var total = yesCount + noCount + ongoingCount;
      if(total > 0){
        var pieData = [
    			{ label: 'yes', count: yesCount, color: "#537b35" },
    			{ label: 'no', count: noCount, color: "#d7d7d8" },
          { label: 'ongoing', count: ongoingCount, color: "#ecb731" }
    		]
        var sectionRow = section.append('div')
        var svg = sectionRow.append('div').attr('class', 'stage-info').append('svg')
          .attr('class', 'progress-pie')
          .attr('width', width).attr('height', height)
          .append('g').attr('transform', 'translate(' + (width / 2) + ',' + (height / 2) + ')')
        svg.selectAll('g').data(pie(pieData)).enter().append('path')
          .attr('d', arc)
          .style("fill", function(d) { return d.data.color; })
        sectionRow.append('div').attr('class', 'stage-info').text(stage)

      }
    });
  });
}

getData();


</script>
